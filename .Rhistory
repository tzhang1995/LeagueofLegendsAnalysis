models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[i] <- table %>%
filter(championName == champions[[i]]) %>%
glm(formula = win*goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[i], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
results$models$WR_highlow <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
),
plot = map(
table,
.f = GET_WR_PLOTS
)
)
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[i] <- table %>%
filter(championName == champions[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[i], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
results$models$WR_highlow <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
),
plot = map(
table,
.f = GET_WR_PLOTS
)
)
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[i] <- table %>%
filter(championName == champions[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
results$models$WR_highlow <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
),
plot = map(
table,
.f = GET_WR_PLOTS
)
)
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[[i]] <- table %>%
filter(championName == champions[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
results$models$WR_highlow <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
),
plot = map(
table,
.f = GET_WR_PLOTS
)
)
results$models$WR_highlow <- NULL
winrate$tables$WR_highlow <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
),
plot = map(
table,
.f = GET_WR_PLOTS
)
)
winrate$tables$WR_highlow.temp <- tibble(
ROLE = winrate$tables$highlow %>%
distinct(individualPosition) %>%
{.$individualPosition}
) %>%
mutate(
table = pmap(
.,
.f = GET_WR_DATA
),
model = map(
table,
.f = GET_WR_MODEL
)
)
results$models$WR_highlow.temp
winrate$tables$WR_highlow.temp
winrate$tables$WR_highlow.temp
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName)
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[[1]]}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[[2]]}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[[,1]]}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[,1}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[,1]}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.[1,1]}
winrate$tables$WR_highlow.temp$table[[1]] %>% distinct(championName) %>% {.$championName[[1]]}
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[[i]] <- table %>%
filter(championName == champions$championName[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
winrate$tables$WR_highlow <- winrate$tables$WR_highlow.temp %>%
mutate(
plot = map(
table,
.f = GET_WR_PLOTS
)
)
rlang::last_error()
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[i] <- table %>%
filter(championName == champions$championName[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
winrate$tables$WR_highlow <- winrate$tables$WR_highlow.temp %>%
mutate(
plot = map(
table,
.f = GET_WR_PLOTS
)
)
GET_WR_DATA <- function(ROLE, TABLE1 = data.temp$goldPercent, TABLE2 = winrate$tables$highlow){
glm_data <- TABLE1 %>%
filter(
championName %in% (TABLE2 %>%
filter(individualPosition == ROLE) %>%
{.$championName})
) %>%
return()
}
GET_WR_MODEL <- function(table){
glm(win ~ championName*goldEarned, data = table, family = "binomial") %>%
return()
}
GET_WR_PLOTS <- function(table){
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[[i]] <- table %>%
filter(championName == champions$championName[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
winrate$tables$WR_highlow <- winrate$tables$WR_highlow.temp %>%
mutate(
plot = map(
table,
.f = GET_WR_PLOTS
)
)
browser()
q
q
GET_WR_PLOTS <- function(table){
browser()
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[[i]] <- table %>%
filter(championName == champions$championName[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
winrate$tables$WR_highlow <- winrate$tables$WR_highlow.temp %>%
mutate(
plot = map(
table,
.f = GET_WR_PLOTS
)
)
Q
GET_WR_PLOTS <- function(table){
browser()
role = table$individualPosition[[1]]
models <- list()
preds <- list()
goldRange <- tibble(goldEarned = seq(0, .75, length.out = 75))
champions <- table %>%
distinct(championName)
plot <- plot_ly()
for(i in 1:nrow(champions)){
models[[i]] <- table %>%
filter(championName == champions$championName[[i]]) %>%
glm(formula = win~goldEarned, family = "binomial", data = .)
preds[i] <- predict(models[[i]], new.data = goldRange)
plot <- plot %>%
add_trace(
x = goldRange$goldEarned,
y = preds[i],
type = "scatter",
mode = "lines+markers",
name = champions$championName[[i]]
)
}
plot <- plot %>%
layout(
xaxis = "Gold Percent",
yaxis = "Predicted Probability of Winning",
title = paste0("Top and Bottom 3 Winrate Champions (", role, ")")
)
return(plot)
}
winrate$tables$WR_highlow <- winrate$tables$WR_highlow.temp %>%
mutate(
plot = map(
table,
.f = GET_WR_PLOTS
)
)
# browser()
role = table$individualPosition[[1]]
