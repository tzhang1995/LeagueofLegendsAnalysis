title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
) %>%
animation_opts(
frame = 100
)
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = winrate$tables$clustered[, i+3][[1]],
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hoverinfo = "name",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hoverinfo = "name",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
hovertext = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
hovertext = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hoverinfo = "name",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
hovertext = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
hovertext = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hoverinfo = "hovertext",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hovertext = "color",
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hovertext = ~name,
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
plotly_args <- list() # List to store plotly arguments
plotly_args$traces <- list() # List of plots
for(i in 1:length(results$models$winplay$kmeans)){
plotly_args$traces[[i]] <- list(
visible = F,
name = i+1,
x = winrate$tables$clustered$games,
y = winrate$tables$clustered$winrate,
text = winrate$tables$clustered$championName,
color = winrate$tables$clustered[,i+3][[1]],
colors = "Set3"
)
}
plotly_args$traces[2][[1]]$visible = T # Manually setting the k=3 plot to be visible first
plotly_args$steps <- list() # List to store objects populated by loop
data.temp$fig <- plot_ly()
for(i in 1:length(results$models$winplay$kmeans)){
data.temp$fig <- add_markers(
data.temp$fig,
x = plotly_args$traces[i][[1]]$x,
y = plotly_args$traces[i][[1]]$y,
color = plotly_args$traces[i][[1]]$color,
colors = plotly_args$traces[i][[1]]$colors,
visible = plotly_args$traces[i][[1]]$visible,
name = plotly_args$traces[i][[1]]$name,
text = plotly_args$traces[i][[1]]$text,
type = "scatter",
mode = "markers",
hovertext = plotly_args$traces[i][[1]]$text,
showlegend = F
)
plotly_args$step <- list(
args = list(
"visible",
rep(F, length(plotly_args$traces))
),
method = "restyle",
label = plotly_args$traces[i][[1]]$name
)
plotly_args$step$args[[2]][i] = T
plotly_args$steps[[i]] = plotly_args$step
}
rm(i)
winrate$plots$kmeans <- data.temp$fig %>%
layout(
sliders = list(list(
active = 1, # 0 indexed in R, nice
currentvalue = list(prefix = "k = "),
steps = plotly_args$steps,
pad = list(t = 45)
))
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
)
winrate$plots$kmeans
# Will use this in the future, even if there is that ugly play button
winrate$tables$clustered %>%
pivot_longer(cols = 4:11, names_to = "n_clusters", values_to = "membership") %>%
plot_ly(
x = ~games,
y = ~winrate,
colors = "Set3",
color = ~membership,
frame = ~n_clusters,
type = "scatter",
mode = "markers",
text = ~championName
) %>%
layout(
title = "Cluster Membership",
xaxis = list(title = "Games Played"),
yaxis = list(title = "Winrate")
) %>%
animation_opts(
frame = 100
)
winrate$tables$base %>% arrange(winrate)
winrate$tables$base %>% arrange(winrate) %>% view()
winrate$tables$tier %>% filter(games > 500) %>% arrange(winrate)
gameInfo %>% colnames()
matchData$gameInfo.raw %>% colnames()
gameInfo <- matchData$gameInfo.raw %>% # Selecting only certain columns for simplicity
select(tier, division, version, match, assists, champExperience, champLevel, championId, championName, deaths, detectorWardsPlaced, firstBloodKill, goldEarned, goldSpent, individualPosition, item1, item2, item3, item4, item5, item6, kills, lane, role, timePlayed, totalDamageDealtToChampions, totalDamageDealt, totalTimeSpentDead, visionScore, wardsKilled, wardsPlaced, win) %>%
mutate(
tier = factor(tier, levels = c("IRON", "BRONZE", "SILVER", "GOLD", "PLATINUM", "DIAMOND")),
division = factor(division, levels = c("I", "II", "III", "IV")),
individualPosition = factor(individualPosition, levels = c("UTILITY", "BOTTOM", "MIDDLE", "JUNGLE", "TOP", "Invalid")),
lane = factor(lane, levels = c("BOTTOM", "MIDDLE", "JUNGLE", "TOP", "NONE")),
role = factor(role, levels= c("SUPPORT", "CARRY", "NONE", "SOLO", "DUO")),
win = factor(win, levels = c(FALSE, TRUE))
)
gameInfo$timePlayed
write.csv(gameInfo, "./data/matchData.csv")
results$models$visionScore.role.time <- glm(win ~ visionScore*individualPosition*timePlayed, data = gameInfo %>% filter(invididualPosition != "Invalid", family = "binomial"))
results$models$visionScore.role.time <- glm(win ~ visionScore*individualPosition*timePlayed, data = gameInfo %>% filter(invididualPosition != "Invalid"), family = "binomial")
results$models$visionScore.role.time <- glm(win ~ visionScore*individualPosition*timePlayed, data = gameInfo %>% filter(invividualPosition != "Invalid"), family = "binomial")
results$models$visionScore.role.time <- glm(win ~ visionScore*individualPosition*timePlayed, data = gameInfo %>% filter(individualPosition != "Invalid"), family = "binomial")
