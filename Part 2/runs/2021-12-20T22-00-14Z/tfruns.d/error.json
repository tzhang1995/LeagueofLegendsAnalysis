{
  "message": "object 'FLAGS' not found",
  "traceback": ["create_layer(keras$layers$Dropout, object, list(rate = rate, \n    noise_shape = normalize_shape(noise_shape), seed = seed, \n    input_shape = normalize_shape(input_shape), batch_input_shape = normalize_shape(batch_input_shape), \n    batch_size = as_nullable_integer(batch_size), name = name, \n    trainable = trainable, weights = weights))", "layer_dropout(., rate = FLAGS$dropout)", "create_layer(keras$layers$Dense, object, list(units = as.integer(units), \n    activation = activation, use_bias = use_bias, kernel_initializer = kernel_initializer, \n    bias_initializer = bias_initializer, kernel_regularizer = kernel_regularizer, \n    bias_regularizer = bias_regularizer, activity_regularizer = activity_regularizer, \n    kernel_constraint = kernel_constraint, bias_constraint = bias_constraint, \n    input_shape = normalize_shape(input_shape), batch_input_shape = normalize_shape(batch_input_shape), \n    batch_size = as_nullable_integer(batch_size), dtype = dtype, \n    name = name, trainable = trainable, weights = weights))", "layer_dense(., units = 1, activation = \"sigmoid\")", "input %>% text_vectorization() %>% layer_embedding(input_dim = num_words + \n    1, output_dim = 16) %>% layer_global_average_pooling_1d() %>% \n    layer_dense(units = 16, activation = \"relu\") %>% layer_dropout(rate = FLAGS$dropout) %>% \n    layer_dense(units = 1, activation = \"sigmoid\")", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "tuning_run(\"TeamCompNN.R\", flags = list(dropout = c(0.2, 0.3, \n    0.4, 0.5)))"]
}
